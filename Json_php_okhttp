package com.harik.lenovo.intents;

import android.util.Log;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

/**
 * cols = liste des colonnes de la table db
 * il faut un objet json ('result') uqi inclu un json array => echo json_encode(array('result'=>$js));
 */

public class JsonParseur {

    public  String [] cols;
//getData prends  json (jsonString) et le nom du tableau json (en php : json_encode("nomJsonObjet"=>le_tablea__associatif_php))
//getData retourne une liste d'objet qu'on va passer Ã  un adapter pour l'afficher dans une liste view
    public List<Map<String , String>> getData(String jsonString, String result){
        List<Map<String , String>> liste=new ArrayList<>();
        Map<String, String> hash = new HashMap<String, String>();
        try {
            JSONObject jo=new JSONObject(jsonString);
            System.out.println("jo est "+jo.toString());
            JSONArray ja = jo.getJSONArray(result);
            System.out.println("json array"+ Arrays.asList(ja));
          for(int i=0;i<ja.length();i++){
              hash = new HashMap<String, String>();
             hash.put("nom",ja.getJSONObject(i).getString("nom"));
              hash.put("loc",ja.getJSONObject(i).getString("loc"));



              liste.add(i,hash);

          }
        } catch (Exception e) {

e.printStackTrace();
            System.out.println("Erreur json 1 "+e.getMessage());
        }


        return liste;
    }


//la mathode run : retourne json envoyer depuis une url php qui retourne un json (json_encode)
    String run(String url) throws IOException {
        OkHttpClient client = new OkHttpClient();
        Request request = new Request.Builder()
                .url(url)
                .build();

        Response response = client.newCall(request).execute();
        return response.body().string();
    }
    //exemple d'utilisation des methodes getdata et run  

public static void main(String arg[]){
    String resultat="";
    JsonParseur jo=new JsonParseur();
    jo.cols=new String[]{"id","nom","loc"};
    try {
        resultat = jo.run("http://localhost/android/users.php");// url du script php qui affiche json
        System.out.print("Test json okhttp"+resultat);// exemple de resultat : {"result":[{"id":1,"nom":"ali","loc":"3.22828","7.93898"},....]
        List<Map<String, String>> ss = jo.getData(resultat, "result");
        for (Map<String,String> m: ss   ) {
            System.out.println("nom est "+m.get("nom"));
        }
    } catch (IOException e) {
       System.out.print("Test json okhttp "+e.getMessage());
    }
}
}
